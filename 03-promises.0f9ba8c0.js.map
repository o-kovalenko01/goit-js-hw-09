{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAiCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAzCQO,SAASC,cAAc,SAE/BC,iBAAiB,UAAU,SAAAC,GAChCA,EAAMC,iBAWN,IAVA,IAAMC,EAAUL,SAASC,cAAc,uBACjCK,EAASN,SAASC,cAAc,sBAChCM,EAAWP,SAASC,cAAc,wBAElCO,EAAeC,SAASJ,EAAQK,OAChCC,EAAOF,SAASH,EAAOI,OACvBE,EAASH,SAASF,EAASG,OAE3BG,EAAW,GAERC,EAAI,EAAGA,GAAKF,EAAQE,IAAK,CAChC,IAGMC,EAAUxB,EAHCuB,EACHN,GAAgBM,EAAI,GAAKH,GAGvCE,EAASG,KAAKD,GAEdA,EACGE,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,EAAA9B,GAAS+B,OAAOC,QAAQ,qBAAoCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAEnE8B,OAAM,SAAAL,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,EAAA9B,GAAS+B,OAAOI,QAAQ,oBAAmCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst elForm = document.querySelector('.form');\n\nelForm.addEventListener('submit', event => {\n  event.preventDefault();\n  const elDelay = document.querySelector('input[name=\"delay\"]');\n  const elStep = document.querySelector('input[name=\"step\"]');\n  const elAmount = document.querySelector('input[name=\"amount\"]');\n\n  const initialDelay = parseInt(elDelay.value);\n  const step = parseInt(elStep.value);\n  const amount = parseInt(elAmount.value);\n\n  const promises = [];\n\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const delay = initialDelay + (i - 1) * step;\n\n    const promise = createPromise(position, delay);\n    promises.push(promise);\n\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","elDelay","elStep","elAmount","initialDelay","parseInt","value","step","amount","promises","i","promise","push","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.0f9ba8c0.js.map"}